// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// thomasAlgorithm
std::vector<double> thomasAlgorithm(double a, double b, double c, std::vector<double> d);
RcppExport SEXP _pdes_thomasAlgorithm(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(thomasAlgorithm(a, b, c, d));
    return rcpp_result_gen;
END_RCPP
}
// tridiag_solve
std::vector<double> tridiag_solve(std::vector<double> a, std::vector<double> b, std::vector<double> c, std::vector<double> d);
RcppExport SEXP _pdes_tridiag_solve(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type a(aSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type b(bSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type c(cSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(tridiag_solve(a, b, c, d));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pdes_thomasAlgorithm", (DL_FUNC) &_pdes_thomasAlgorithm, 4},
    {"_pdes_tridiag_solve", (DL_FUNC) &_pdes_tridiag_solve, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_pdes(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
